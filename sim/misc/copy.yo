                            | # Ryan Guo
                            | 
0x000:                      | init:
0x000:                      | 	.pos 0
0x000: 30f40001000000000000 | 	irmovq Stack, %rsp
0x00a: 30f73800000000000000 |     irmovq src, %rdi
0x014: 30f65000000000000000 |     irmovq dest, %rsi
0x01e: 30f20300000000000000 | 	irmovq $3, %rdx
0x028: 806800000000000000   | 	call copy_block
0x031: 00                   | 	halt
                            | 
0x038:                      | .align 8
                            | 
                            | # Source block
0x038:                      | src:
0x038: 0a00000000000000     | 	.quad 0x00a
0x040: b000000000000000     | 	.quad 0x0b0
0x048: 000c000000000000     | 	.quad 0xc00
                            | 
                            | # Destination block
0x050:                      | dest:
0x050: 1101000000000000     | 	.quad 0x111
0x058: 2202000000000000     | 	.quad 0x222
0x060: 3303000000000000     | 	.quad 0x333
                            | 
0x068:                      | copy_block:
0x068: 30f30100000000000000 | 	irmovq $1, %rbx
0x072: 30fc0800000000000000 | 	irmovq $8, %r12
0x07c: 6300                 | 	xorq %rax, %rax
0x07e: 6222                 | 	andq %rdx, %rdx
0x080: 71b000000000000000   |     jle Done
                            | 
0x089:                      | Loop:
0x089: 50970000000000000000 |     mrmovq (%rdi), %r9    # long val = *src
0x093: 40960000000000000000 | 	rmmovq %r9, 0(%rsi)   # *dest = val
0x09d: 60c7                 |     addq %r12, %rdi       # src++
0x09f: 60c6                 |     addq %r12, %rsi       # dest++
0x0a1: 6390                 |     xorq %r9, %rax       # result ^= val
0x0a3: 6132                 | 	subq %rbx, %rdx
0x0a5: 6222                 | 	andq %rdx, %rdx
0x0a7: 748900000000000000   | 	jne Loop
                            | 
0x0b0:                      | Done:
0x0b0: 90                   | 	ret
                            | 
0x100:                      | .pos 0x100
0x100:                      | Stack:
